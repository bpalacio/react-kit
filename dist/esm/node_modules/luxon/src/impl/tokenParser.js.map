{"version":3,"file":"tokenParser.js","sources":["../../../../../../node_modules/luxon/src/impl/tokenParser.js"],"sourcesContent":["import { parseMillis, isUndefined, untruncateYear, signedOffset, hasOwnProperty } from \"./util.js\";\nimport Formatter from \"./formatter.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport DateTime from \"../datetime.js\";\nimport { digitRegex, parseDigits } from \"./digits.js\";\nimport { ConflictingSpecificationError } from \"../errors.js\";\n\nconst MISSING_FTP = \"missing Intl.DateTimeFormat.formatToParts support\";\n\nfunction intUnit(regex, post = (i) => i) {\n  return { regex, deser: ([s]) => post(parseDigits(s)) };\n}\n\nconst NBSP = String.fromCharCode(160);\nconst spaceOrNBSP = `[ ${NBSP}]`;\nconst spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, \"g\");\n\nfunction fixListRegex(s) {\n  // make dots optional and also make them literal\n  // make space and non breakable space characters interchangeable\n  return s.replace(/\\./g, \"\\\\.?\").replace(spaceOrNBSPRegExp, spaceOrNBSP);\n}\n\nfunction stripInsensitivities(s) {\n  return s\n    .replace(/\\./g, \"\") // ignore dots that were made optional\n    .replace(spaceOrNBSPRegExp, \" \") // interchange space and nbsp\n    .toLowerCase();\n}\n\nfunction oneOf(strings, startIndex) {\n  if (strings === null) {\n    return null;\n  } else {\n    return {\n      regex: RegExp(strings.map(fixListRegex).join(\"|\")),\n      deser: ([s]) =>\n        strings.findIndex((i) => stripInsensitivities(s) === stripInsensitivities(i)) + startIndex,\n    };\n  }\n}\n\nfunction offset(regex, groups) {\n  return { regex, deser: ([, h, m]) => signedOffset(h, m), groups };\n}\n\nfunction simple(regex) {\n  return { regex, deser: ([s]) => s };\n}\n\nfunction escapeToken(value) {\n  return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nfunction unitForToken(token, loc) {\n  const one = digitRegex(loc),\n    two = digitRegex(loc, \"{2}\"),\n    three = digitRegex(loc, \"{3}\"),\n    four = digitRegex(loc, \"{4}\"),\n    six = digitRegex(loc, \"{6}\"),\n    oneOrTwo = digitRegex(loc, \"{1,2}\"),\n    oneToThree = digitRegex(loc, \"{1,3}\"),\n    oneToSix = digitRegex(loc, \"{1,6}\"),\n    oneToNine = digitRegex(loc, \"{1,9}\"),\n    twoToFour = digitRegex(loc, \"{2,4}\"),\n    fourToSix = digitRegex(loc, \"{4,6}\"),\n    literal = (t) => ({ regex: RegExp(escapeToken(t.val)), deser: ([s]) => s, literal: true }),\n    unitate = (t) => {\n      if (token.literal) {\n        return literal(t);\n      }\n      switch (t.val) {\n        // era\n        case \"G\":\n          return oneOf(loc.eras(\"short\", false), 0);\n        case \"GG\":\n          return oneOf(loc.eras(\"long\", false), 0);\n        // years\n        case \"y\":\n          return intUnit(oneToSix);\n        case \"yy\":\n          return intUnit(twoToFour, untruncateYear);\n        case \"yyyy\":\n          return intUnit(four);\n        case \"yyyyy\":\n          return intUnit(fourToSix);\n        case \"yyyyyy\":\n          return intUnit(six);\n        // months\n        case \"M\":\n          return intUnit(oneOrTwo);\n        case \"MM\":\n          return intUnit(two);\n        case \"MMM\":\n          return oneOf(loc.months(\"short\", true, false), 1);\n        case \"MMMM\":\n          return oneOf(loc.months(\"long\", true, false), 1);\n        case \"L\":\n          return intUnit(oneOrTwo);\n        case \"LL\":\n          return intUnit(two);\n        case \"LLL\":\n          return oneOf(loc.months(\"short\", false, false), 1);\n        case \"LLLL\":\n          return oneOf(loc.months(\"long\", false, false), 1);\n        // dates\n        case \"d\":\n          return intUnit(oneOrTwo);\n        case \"dd\":\n          return intUnit(two);\n        // ordinals\n        case \"o\":\n          return intUnit(oneToThree);\n        case \"ooo\":\n          return intUnit(three);\n        // time\n        case \"HH\":\n          return intUnit(two);\n        case \"H\":\n          return intUnit(oneOrTwo);\n        case \"hh\":\n          return intUnit(two);\n        case \"h\":\n          return intUnit(oneOrTwo);\n        case \"mm\":\n          return intUnit(two);\n        case \"m\":\n          return intUnit(oneOrTwo);\n        case \"q\":\n          return intUnit(oneOrTwo);\n        case \"qq\":\n          return intUnit(two);\n        case \"s\":\n          return intUnit(oneOrTwo);\n        case \"ss\":\n          return intUnit(two);\n        case \"S\":\n          return intUnit(oneToThree);\n        case \"SSS\":\n          return intUnit(three);\n        case \"u\":\n          return simple(oneToNine);\n        case \"uu\":\n          return simple(oneOrTwo);\n        case \"uuu\":\n          return intUnit(one);\n        // meridiem\n        case \"a\":\n          return oneOf(loc.meridiems(), 0);\n        // weekYear (k)\n        case \"kkkk\":\n          return intUnit(four);\n        case \"kk\":\n          return intUnit(twoToFour, untruncateYear);\n        // weekNumber (W)\n        case \"W\":\n          return intUnit(oneOrTwo);\n        case \"WW\":\n          return intUnit(two);\n        // weekdays\n        case \"E\":\n        case \"c\":\n          return intUnit(one);\n        case \"EEE\":\n          return oneOf(loc.weekdays(\"short\", false, false), 1);\n        case \"EEEE\":\n          return oneOf(loc.weekdays(\"long\", false, false), 1);\n        case \"ccc\":\n          return oneOf(loc.weekdays(\"short\", true, false), 1);\n        case \"cccc\":\n          return oneOf(loc.weekdays(\"long\", true, false), 1);\n        // offset/zone\n        case \"Z\":\n        case \"ZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`), 2);\n        case \"ZZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`), 2);\n        // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing\n        // because we don't have any way to figure out what they are\n        case \"z\":\n          return simple(/[a-z_+-/]{1,256}?/i);\n        default:\n          return literal(t);\n      }\n    };\n\n  const unit = unitate(token) || {\n    invalidReason: MISSING_FTP,\n  };\n\n  unit.token = token;\n\n  return unit;\n}\n\nconst partTypeStyleToTokenVal = {\n  year: {\n    \"2-digit\": \"yy\",\n    numeric: \"yyyyy\",\n  },\n  month: {\n    numeric: \"M\",\n    \"2-digit\": \"MM\",\n    short: \"MMM\",\n    long: \"MMMM\",\n  },\n  day: {\n    numeric: \"d\",\n    \"2-digit\": \"dd\",\n  },\n  weekday: {\n    short: \"EEE\",\n    long: \"EEEE\",\n  },\n  dayperiod: \"a\",\n  dayPeriod: \"a\",\n  hour: {\n    numeric: \"h\",\n    \"2-digit\": \"hh\",\n  },\n  minute: {\n    numeric: \"m\",\n    \"2-digit\": \"mm\",\n  },\n  second: {\n    numeric: \"s\",\n    \"2-digit\": \"ss\",\n  },\n  timeZoneName: {\n    long: \"ZZZZZ\",\n    short: \"ZZZ\",\n  },\n};\n\nfunction tokenForPart(part, formatOpts) {\n  const { type, value } = part;\n\n  if (type === \"literal\") {\n    return {\n      literal: true,\n      val: value,\n    };\n  }\n\n  const style = formatOpts[type];\n\n  let val = partTypeStyleToTokenVal[type];\n  if (typeof val === \"object\") {\n    val = val[style];\n  }\n\n  if (val) {\n    return {\n      literal: false,\n      val,\n    };\n  }\n\n  return undefined;\n}\n\nfunction buildRegex(units) {\n  const re = units.map((u) => u.regex).reduce((f, r) => `${f}(${r.source})`, \"\");\n  return [`^${re}$`, units];\n}\n\nfunction match(input, regex, handlers) {\n  const matches = input.match(regex);\n\n  if (matches) {\n    const all = {};\n    let matchIndex = 1;\n    for (const i in handlers) {\n      if (hasOwnProperty(handlers, i)) {\n        const h = handlers[i],\n          groups = h.groups ? h.groups + 1 : 1;\n        if (!h.literal && h.token) {\n          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));\n        }\n        matchIndex += groups;\n      }\n    }\n    return [matches, all];\n  } else {\n    return [matches, {}];\n  }\n}\n\nfunction dateTimeFromMatches(matches) {\n  const toField = (token) => {\n    switch (token) {\n      case \"S\":\n        return \"millisecond\";\n      case \"s\":\n        return \"second\";\n      case \"m\":\n        return \"minute\";\n      case \"h\":\n      case \"H\":\n        return \"hour\";\n      case \"d\":\n        return \"day\";\n      case \"o\":\n        return \"ordinal\";\n      case \"L\":\n      case \"M\":\n        return \"month\";\n      case \"y\":\n        return \"year\";\n      case \"E\":\n      case \"c\":\n        return \"weekday\";\n      case \"W\":\n        return \"weekNumber\";\n      case \"k\":\n        return \"weekYear\";\n      case \"q\":\n        return \"quarter\";\n      default:\n        return null;\n    }\n  };\n\n  let zone = null;\n  let specificOffset;\n  if (!isUndefined(matches.z)) {\n    zone = IANAZone.create(matches.z);\n  }\n\n  if (!isUndefined(matches.Z)) {\n    if (!zone) {\n      zone = new FixedOffsetZone(matches.Z);\n    }\n    specificOffset = matches.Z;\n  }\n\n  if (!isUndefined(matches.q)) {\n    matches.M = (matches.q - 1) * 3 + 1;\n  }\n\n  if (!isUndefined(matches.h)) {\n    if (matches.h < 12 && matches.a === 1) {\n      matches.h += 12;\n    } else if (matches.h === 12 && matches.a === 0) {\n      matches.h = 0;\n    }\n  }\n\n  if (matches.G === 0 && matches.y) {\n    matches.y = -matches.y;\n  }\n\n  if (!isUndefined(matches.u)) {\n    matches.S = parseMillis(matches.u);\n  }\n\n  const vals = Object.keys(matches).reduce((r, k) => {\n    const f = toField(k);\n    if (f) {\n      r[f] = matches[k];\n    }\n\n    return r;\n  }, {});\n\n  return [vals, zone, specificOffset];\n}\n\nlet dummyDateTimeCache = null;\n\nfunction getDummyDateTime() {\n  if (!dummyDateTimeCache) {\n    dummyDateTimeCache = DateTime.fromMillis(1555555555555);\n  }\n\n  return dummyDateTimeCache;\n}\n\nfunction maybeExpandMacroToken(token, locale) {\n  if (token.literal) {\n    return token;\n  }\n\n  const formatOpts = Formatter.macroTokenToFormatOpts(token.val);\n  const tokens = formatOptsToTokens(formatOpts, locale);\n\n  if (tokens == null || tokens.includes(undefined)) {\n    return token;\n  }\n\n  return tokens;\n}\n\nexport function expandMacroTokens(tokens, locale) {\n  return Array.prototype.concat(...tokens.map((t) => maybeExpandMacroToken(t, locale)));\n}\n\n/**\n * @private\n */\n\nexport function explainFromTokens(locale, input, format) {\n  const tokens = expandMacroTokens(Formatter.parseFormat(format), locale),\n    units = tokens.map((t) => unitForToken(t, locale)),\n    disqualifyingUnit = units.find((t) => t.invalidReason);\n\n  if (disqualifyingUnit) {\n    return { input, tokens, invalidReason: disqualifyingUnit.invalidReason };\n  } else {\n    const [regexString, handlers] = buildRegex(units),\n      regex = RegExp(regexString, \"i\"),\n      [rawMatches, matches] = match(input, regex, handlers),\n      [result, zone, specificOffset] = matches\n        ? dateTimeFromMatches(matches)\n        : [null, null, undefined];\n    if (hasOwnProperty(matches, \"a\") && hasOwnProperty(matches, \"H\")) {\n      throw new ConflictingSpecificationError(\n        \"Can't include meridiem when specifying 24-hour format\"\n      );\n    }\n    return { input, tokens, regex, rawMatches, matches, result, zone, specificOffset };\n  }\n}\n\nexport function parseFromTokens(locale, input, format) {\n  const { result, zone, specificOffset, invalidReason } = explainFromTokens(locale, input, format);\n  return [result, zone, specificOffset, invalidReason];\n}\n\nexport function formatOptsToTokens(formatOpts, locale) {\n  if (!formatOpts) {\n    return null;\n  }\n\n  const formatter = Formatter.create(locale, formatOpts);\n  const parts = formatter.formatDateTimeParts(getDummyDateTime());\n  return parts.map((p) => tokenForPart(p, formatOpts));\n}\n"],"names":["MISSING_FTP","intUnit","regex","post","i","deser","s","parseDigits","spaceOrNBSP","String","fromCharCode","spaceOrNBSPRegExp","RegExp","fixListRegex","replace","stripInsensitivities","toLowerCase","oneOf","strings","startIndex","map","join","findIndex","offset","groups","h","m","signedOffset","simple","partTypeStyleToTokenVal","year","numeric","month","short","long","day","weekday","dayperiod","dayPeriod","hour","minute","second","timeZoneName","dummyDateTimeCache","expandMacroTokens","tokens","locale","Array","prototype","concat","t","token","literal","formatOptsToTokens","Formatter","macroTokenToFormatOpts","val","includes","undefined","maybeExpandMacroToken","explainFromTokens","input","format","parseFormat","units","loc","one","digitRegex","two","three","four","six","oneOrTwo","oneToThree","oneToSix","oneToNine","twoToFour","fourToSix","value","unit","eras","untruncateYear","months","meridiems","weekdays","source","unitate","invalidReason","unitForToken","disqualifyingUnit","find","regexString","handlers","u","reduce","f","r","buildRegex","rawMatches","matches","match","all","matchIndex","hasOwnProperty","slice","result","zone","specificOffset","isUndefined","z","IANAZone","create","Z","FixedOffsetZone","q","M","a","G","y","S","parseMillis","Object","keys","k","toField","dateTimeFromMatches","ConflictingSpecificationError","parseFromTokens","formatOpts","formatDateTimeParts","DateTime","fromMillis","p","part","type","style","tokenForPart"],"mappings":"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"}