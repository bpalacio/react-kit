import{hasOwnProperty as e,isUndefined as r,parseMillis as n,signedOffset as t,untruncateYear as s}from"./util.js";import a from"./formatter.js";import c from"../zones/fixedOffsetZone.js";import o from"../zones/IANAZone.js";import u from"../datetime.js";import{parseDigits as i,digitRegex as l}from"./digits.js";import{ConflictingSpecificationError as m}from"../errors.js";const d="missing Intl.DateTimeFormat.formatToParts support";function f(e,r=(e=>e)){return{regex:e,deser:([e])=>r(i(e))}}const y=`[ ${String.fromCharCode(160)}]`,p=new RegExp(y,"g");function g(e){return e.replace(/\./g,"\\.?").replace(p,y)}function h(e){return e.replace(/\./g,"").replace(p," ").toLowerCase()}function M(e,r){return null===e?null:{regex:RegExp(e.map(g).join("|")),deser:([n])=>e.findIndex((e=>h(n)===h(e)))+r}}function k(e,r){return{regex:e,deser:([,e,r])=>t(e,r),groups:r}}function E(e){return{regex:e,deser:([e])=>e}}const Z={year:{"2-digit":"yy",numeric:"yyyyy"},month:{numeric:"M","2-digit":"MM",short:"MMM",long:"MMMM"},day:{numeric:"d","2-digit":"dd"},weekday:{short:"EEE",long:"EEEE"},dayperiod:"a",dayPeriod:"a",hour:{numeric:"h","2-digit":"hh"},minute:{numeric:"m","2-digit":"mm"},second:{numeric:"s","2-digit":"ss"},timeZoneName:{long:"ZZZZZ",short:"ZZZ"}};let w=null;function v(e,r){return Array.prototype.concat(...e.map((e=>function(e,r){if(e.literal)return e;const n=R(a.macroTokenToFormatOpts(e.val),r);return null==n||n.includes(void 0)?e:n}(e,r))))}function x(t,u,i){const y=v(a.parseFormat(i),t),p=y.map((e=>function(e,r){const n=l(r),t=l(r,"{2}"),a=l(r,"{3}"),c=l(r,"{4}"),o=l(r,"{6}"),u=l(r,"{1,2}"),i=l(r,"{1,3}"),m=l(r,"{1,6}"),y=l(r,"{1,9}"),p=l(r,"{2,4}"),g=l(r,"{4,6}"),h=e=>{return{regex:RegExp((r=e.val,r.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"))),deser:([e])=>e,literal:!0};var r},Z=(l=>{if(e.literal)return h(l);switch(l.val){case"G":return M(r.eras("short",!1),0);case"GG":return M(r.eras("long",!1),0);case"y":return f(m);case"yy":case"kk":return f(p,s);case"yyyy":case"kkkk":return f(c);case"yyyyy":return f(g);case"yyyyyy":return f(o);case"M":case"L":case"d":case"H":case"h":case"m":case"q":case"s":case"W":return f(u);case"MM":case"LL":case"dd":case"HH":case"hh":case"mm":case"qq":case"ss":case"WW":return f(t);case"MMM":return M(r.months("short",!0,!1),1);case"MMMM":return M(r.months("long",!0,!1),1);case"LLL":return M(r.months("short",!1,!1),1);case"LLLL":return M(r.months("long",!1,!1),1);case"o":case"S":return f(i);case"ooo":case"SSS":return f(a);case"u":return E(y);case"uu":return E(u);case"uuu":case"E":case"c":return f(n);case"a":return M(r.meridiems(),0);case"EEE":return M(r.weekdays("short",!1,!1),1);case"EEEE":return M(r.weekdays("long",!1,!1),1);case"ccc":return M(r.weekdays("short",!0,!1),1);case"cccc":return M(r.weekdays("long",!0,!1),1);case"Z":case"ZZ":return k(new RegExp(`([+-]${u.source})(?::(${t.source}))?`),2);case"ZZZ":return k(new RegExp(`([+-]${u.source})(${t.source})?`),2);case"z":return E(/[a-z_+-/]{1,256}?/i);default:return h(l)}})(e)||{invalidReason:d};return Z.token=e,Z}(e,t))),g=p.find((e=>e.invalidReason));if(g)return{input:u,tokens:y,invalidReason:g.invalidReason};{const[t,s]=function(e){return[`^${e.map((e=>e.regex)).reduce(((e,r)=>`${e}(${r.source})`),"")}$`,e]}(p),a=RegExp(t,"i"),[i,l]=function(r,n,t){const s=r.match(n);if(s){const r={};let n=1;for(const a in t)if(e(t,a)){const e=t[a],c=e.groups?e.groups+1:1;!e.literal&&e.token&&(r[e.token.val[0]]=e.deser(s.slice(n,n+c))),n+=c}return[s,r]}return[s,{}]}(u,a,s),[d,f,g]=l?function(e){let t,s=null;return r(e.z)||(s=o.create(e.z)),r(e.Z)||(s||(s=new c(e.Z)),t=e.Z),r(e.q)||(e.M=3*(e.q-1)+1),r(e.h)||(e.h<12&&1===e.a?e.h+=12:12===e.h&&0===e.a&&(e.h=0)),0===e.G&&e.y&&(e.y=-e.y),r(e.u)||(e.S=n(e.u)),[Object.keys(e).reduce(((r,n)=>{const t=(e=>{switch(e){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":case"H":return"hour";case"d":return"day";case"o":return"ordinal";case"L":case"M":return"month";case"y":return"year";case"E":case"c":return"weekday";case"W":return"weekNumber";case"k":return"weekYear";case"q":return"quarter";default:return null}})(n);return t&&(r[t]=e[n]),r}),{}),s,t]}(l):[null,null,void 0];if(e(l,"a")&&e(l,"H"))throw new m("Can't include meridiem when specifying 24-hour format");return{input:u,tokens:y,regex:a,rawMatches:i,matches:l,result:d,zone:f,specificOffset:g}}}function L(e,r,n){const{result:t,zone:s,specificOffset:a,invalidReason:c}=x(e,r,n);return[t,s,a,c]}function R(e,r){if(!e)return null;return a.create(r,e).formatDateTimeParts((w||(w=u.fromMillis(1555555555555)),w)).map((r=>function(e,r){const{type:n,value:t}=e;if("literal"===n)return{literal:!0,val:t};const s=r[n];let a=Z[n];return"object"==typeof a&&(a=a[s]),a?{literal:!1,val:a}:void 0}(r,e)))}export{v as expandMacroTokens,x as explainFromTokens,R as formatOptsToTokens,L as parseFromTokens};
//# sourceMappingURL=tokenParser.js.map
