import{weeksInWeekYear as e,timeObject as n,isInteger as t,integerBetween as r,daysInYear as o,daysInMonth as a,isLeapYear as u}from"./util.js";import i from"./invalid.js";const y=[0,31,59,90,120,151,181,212,243,273,304,334],c=[0,31,60,91,121,152,182,213,244,274,305,335];function d(e,n){return new i("unit out of range",`you specified ${n} (of type ${typeof n}) as a ${e}, which is invalid`)}function s(e,n,t){const r=new Date(Date.UTC(e,n-1,t));e<100&&e>=0&&r.setUTCFullYear(r.getUTCFullYear()-1900);const o=r.getUTCDay();return 0===o?7:o}function m(e,n,t){return t+(u(e)?c:y)[n-1]}function f(e,n){const t=u(e)?c:y,r=t.findIndex((e=>e<n));return{month:r+1,day:n-t[r]}}function l(t){const{year:r,month:o,day:a}=t,u=m(r,o,a),i=s(r,o,a);let y,c=Math.floor((u-i+10)/7);return c<1?(y=r-1,c=e(y)):c>e(r)?(y=r+1,c=1):y=r,{weekYear:y,weekNumber:c,weekday:i,...n(t)}}function w(e){const{weekYear:t,weekNumber:r,weekday:a}=e,u=s(t,1,4),i=o(t);let y,c=7*r+a-u-3;c<1?(y=t-1,c+=o(y)):c>i?(y=t+1,c-=o(t)):y=t;const{month:d,day:m}=f(y,c);return{year:y,month:d,day:m,...n(e)}}function h(e){const{year:t,month:r,day:o}=e;return{year:t,ordinal:m(t,r,o),...n(e)}}function k(e){const{year:t,ordinal:r}=e,{month:o,day:a}=f(t,r);return{year:t,month:o,day:a,...n(e)}}function Y(n){const o=t(n.weekYear),a=r(n.weekNumber,1,e(n.weekYear)),u=r(n.weekday,1,7);return o?a?!u&&d("weekday",n.weekday):d("week",n.week):d("weekYear",n.weekYear)}function p(e){const n=t(e.year),a=r(e.ordinal,1,o(e.year));return n?!a&&d("ordinal",e.ordinal):d("year",e.year)}function C(e){const n=t(e.year),o=r(e.month,1,12),u=r(e.day,1,a(e.year,e.month));return n?o?!u&&d("day",e.day):d("month",e.month):d("year",e.year)}function T(e){const{hour:n,minute:t,second:o,millisecond:a}=e,u=r(n,0,23)||24===n&&0===t&&0===o&&0===a,i=r(t,0,59),y=r(o,0,59),c=r(a,0,999);return u?i?y?!c&&d("millisecond",a):d("second",o):d("minute",t):d("hour",n)}export{h as gregorianToOrdinal,l as gregorianToWeek,C as hasInvalidGregorianData,p as hasInvalidOrdinalData,T as hasInvalidTimeData,Y as hasInvalidWeekData,k as ordinalToGregorian,w as weekToGregorian};
//# sourceMappingURL=conversions.js.map
