{"version":3,"file":"systemZone.js","sources":["../../../../../../node_modules/luxon/src/zones/systemZone.js"],"sourcesContent":["import { formatOffset, parseZoneInfo } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet singleton = null;\n\n/**\n * Represents the local zone for this JavaScript environment.\n * @implements {Zone}\n */\nexport default class SystemZone extends Zone {\n  /**\n   * Get a singleton instance of the local zone\n   * @return {SystemZone}\n   */\n  static get instance() {\n    if (singleton === null) {\n      singleton = new SystemZone();\n    }\n    return singleton;\n  }\n\n  /** @override **/\n  get type() {\n    return \"system\";\n  }\n\n  /** @override **/\n  get name() {\n    return new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName(ts, { format, locale }) {\n    return parseZoneInfo(ts, format, locale);\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /** @override **/\n  offset(ts) {\n    return -new Date(ts).getTimezoneOffset();\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"system\";\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n"],"names":["singleton","SystemZone","Zone","instance","type","name","Intl","DateTimeFormat","resolvedOptions","timeZone","isUniversal","offsetName","ts","format","locale","parseZoneInfo","formatOffset","this","offset","Date","getTimezoneOffset","equals","otherZone","isValid"],"mappings":"4FAGA,IAAIA,EAAY,KAMD,MAAMC,UAAmBC,EAK3BC,sBAIT,OAHkB,OAAdH,IACFA,EAAY,IAAIC,GAEXD,CACR,CAGGI,WACF,MAAO,QACR,CAGGC,WACF,OAAO,IAAIC,KAAKC,gBAAiBC,kBAAkBC,QACpD,CAGGC,kBACF,OAAO,CACR,CAGDC,WAAWC,GAAIC,OAAEA,EAAMC,OAAEA,IACvB,OAAOC,EAAcH,EAAIC,EAAQC,EAClC,CAGDE,aAAaJ,EAAIC,GACf,OAAOG,EAAaC,KAAKC,OAAON,GAAKC,EACtC,CAGDK,OAAON,GACL,OAAQ,IAAIO,KAAKP,GAAIQ,mBACtB,CAGDC,OAAOC,GACL,MAA0B,WAAnBA,EAAUlB,IAClB,CAGGmB,cACF,OAAO,CACR"}