import{signedOffset as t,formatOffset as e}from"../impl/util.js";import r from"../zone.js";let i=null;class n extends r{static get utcInstance(){return null===i&&(i=new n(0)),i}static instance(t){return 0===t?n.utcInstance:new n(t)}static parseSpecifier(e){if(e){const r=e.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);if(r)return new n(t(r[1],r[2]))}return null}constructor(t){super(),this.fixed=t}get type(){return"fixed"}get name(){return 0===this.fixed?"UTC":`UTC${e(this.fixed,"narrow")}`}get ianaName(){return 0===this.fixed?"Etc/UTC":`Etc/GMT${e(-this.fixed,"narrow")}`}offsetName(){return this.name}formatOffset(t,r){return e(this.fixed,r)}get isUniversal(){return!0}offset(){return this.fixed}equals(t){return"fixed"===t.type&&t.fixed===this.fixed}get isValid(){return!0}}export{n as default};
//# sourceMappingURL=fixedOffsetZone.js.map
