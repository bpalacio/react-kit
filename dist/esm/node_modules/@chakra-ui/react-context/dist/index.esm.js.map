{"version":3,"file":"index.esm.js","sources":["../../../../../../node_modules/@chakra-ui/react-context/dist/index.esm.js"],"sourcesContent":["// src/index.ts\nimport {\n  createContext as createReactContext,\n  useContext as useReactContext\n} from \"react\";\nfunction getErrorMessage(hook, provider) {\n  return `${hook} returned \\`undefined\\`. Seems you forgot to wrap component within ${provider}`;\n}\nfunction createContext(options = {}) {\n  const {\n    name,\n    strict = true,\n    hookName = \"useContext\",\n    providerName = \"Provider\",\n    errorMessage\n  } = options;\n  const Context = createReactContext(void 0);\n  Context.displayName = name;\n  function useContext() {\n    var _a;\n    const context = useReactContext(Context);\n    if (!context && strict) {\n      const error = new Error(errorMessage ?? getErrorMessage(hookName, providerName));\n      error.name = \"ContextError\";\n      (_a = Error.captureStackTrace) == null ? void 0 : _a.call(Error, error, useContext);\n      throw error;\n    }\n    return context;\n  }\n  return [Context.Provider, useContext, Context];\n}\nexport {\n  createContext\n};\n"],"names":["createContext","options","name","strict","hookName","providerName","errorMessage","Context","createReactContext","displayName","Provider","useContext","_a","context","useReactContext","error","Error","captureStackTrace","call"],"mappings":"8CAQA,SAASA,EAAcC,EAAU,IAC/B,MAAMC,KACJA,EAAIC,OACJA,GAAS,EAAIC,SACbA,EAAW,aAAYC,aACvBA,EAAe,WAAUC,aACzBA,GACEL,EACEM,EAAUC,EAAAA,mBAAmB,GAanC,OAZAD,EAAQE,YAAcP,EAYf,CAACK,EAAQG,SAXhB,SAASC,IACP,IAAIC,EACJ,MAAMC,EAAUC,aAAgBP,GAChC,IAAKM,GAAWV,EAAQ,CACtB,MAAMY,EAAQ,IAAIC,MAAMV,GAhBrB,GAgBqDF,uEAAUC,KAGlE,MAFAU,EAAMb,KAAO,eACqB,OAAjCU,EAAKI,MAAMC,oBAAsCL,EAAGM,KAAKF,MAAOD,EAAOJ,GAClEI,CACP,CACD,OAAOF,CACR,EACqCN,EACxC"}