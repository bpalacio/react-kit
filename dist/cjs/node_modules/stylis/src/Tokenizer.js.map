{"version":3,"file":"Tokenizer.js","sources":["../../../../../node_modules/stylis/src/Tokenizer.js"],"sourcesContent":["import {from, trim, charat, strlen, substr, append, assign} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nexport function copy (root, props) {\n\treturn assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n"],"names":["node","value","root","parent","type","props","children","length","line","column","return","next","character","position","charat","characters","peek","caret","slice","begin","end","substr","token","delimiter","strlen","index","from","assign","trim","count"],"mappings":"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"}