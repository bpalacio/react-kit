{"version":3,"file":"index.esm.js","sources":["../../../../../../node_modules/@chakra-ui/button/dist/index.esm.js"],"sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra as chakra3,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nvar dataAttr = (condition) => condition ? \"\" : void 0;\n\n// src/button.tsx\nimport { useMemo as useMemo2 } from \"react\";\n\n// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\n// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cloneElement, isValidElement } from \"react\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ React.createElement(chakra.span, {\n    display: \"inline-flex\",\n    alignSelf: \"center\",\n    flexShrink: 0,\n    ...rest,\n    className: _className\n  }, _children);\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\n// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra as chakra2 } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ React.createElement(Spinner, {\n      color: \"currentColor\",\n      width: \"1em\",\n      height: \"1em\"\n    }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(() => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    position: label ? \"relative\" : \"absolute\",\n    [marginProp]: label ? spacing : 0,\n    fontSize: \"1em\",\n    lineHeight: \"normal\",\n    ...__css\n  }), [__css, label, marginProp, spacing]);\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    className: _className,\n    ...rest,\n    __css: spinnerStyles\n  }, children);\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\n// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\n// src/button.tsx\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo2(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ React.createElement(chakra3.button, {\n    disabled: isDisabled || isLoading,\n    ref: useMergeRefs(ref, _ref),\n    as,\n    type: type ?? defaultType,\n    \"data-active\": dataAttr(isActive),\n    \"data-loading\": dataAttr(isLoading),\n    __css: buttonStyles,\n    className: cx(\"chakra-button\", className),\n    ...rest\n  }, isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--start\",\n    label: loadingText,\n    placement: \"start\",\n    spacing: iconSpacing\n  }, spinner), isLoading ? loadingText || /* @__PURE__ */ React.createElement(chakra3.span, {\n    opacity: 0\n  }, /* @__PURE__ */ React.createElement(ButtonContent, {\n    ...contentProps\n  })) : /* @__PURE__ */ React.createElement(ButtonContent, {\n    ...contentProps\n  }), isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--end\",\n    label: loadingText,\n    placement: \"end\",\n    spacing: iconSpacing\n  }, spinner));\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, leftIcon && /* @__PURE__ */ React.createElement(ButtonIcon, {\n    marginEnd: iconSpacing\n  }, leftIcon), children, rightIcon && /* @__PURE__ */ React.createElement(ButtonIcon, {\n    marginStart: iconSpacing\n  }, rightIcon));\n}\n\n// src/button-group.tsx\nimport {\n  chakra as chakra4,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\nimport { useMemo as useMemo3 } from \"react\";\nvar attachedStyles = {\n  horizontal: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderEndRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderStartRadius: 0 }\n  },\n  vertical: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderBottomRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderTopRadius: 0 }\n  }\n};\nvar gapStyles = {\n  horizontal: (spacing) => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginStart: spacing }\n  }),\n  vertical: (spacing) => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginTop: spacing }\n  })\n};\nvar ButtonGroup = forwardRef2(function ButtonGroup2(props, ref) {\n  const {\n    size,\n    colorScheme,\n    variant,\n    className,\n    spacing = \"0.5rem\",\n    isAttached,\n    isDisabled,\n    orientation = \"horizontal\",\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__group\", className);\n  const context = useMemo3(() => ({ size, colorScheme, variant, isDisabled }), [size, colorScheme, variant, isDisabled]);\n  let groupStyles = {\n    display: \"inline-flex\",\n    ...isAttached ? attachedStyles[orientation] : gapStyles[orientation](spacing)\n  };\n  const isVertical = orientation === \"vertical\";\n  return /* @__PURE__ */ React.createElement(ButtonGroupProvider, {\n    value: context\n  }, /* @__PURE__ */ React.createElement(chakra4.div, {\n    ref,\n    role: \"group\",\n    __css: groupStyles,\n    className: _className,\n    \"data-attached\": isAttached ? \"\" : void 0,\n    \"data-orientation\": orientation,\n    flexDir: isVertical ? \"column\" : void 0,\n    ...rest\n  }));\n});\nButtonGroup.displayName = \"ButtonGroup\";\n\n// src/icon-button.tsx\nimport { forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nimport { cloneElement as cloneElement2, isValidElement as isValidElement2 } from \"react\";\nvar IconButton = forwardRef3((props, ref) => {\n  const { icon, children, isRound, \"aria-label\": ariaLabel, ...rest } = props;\n  const element = icon || children;\n  const _children = isValidElement2(element) ? cloneElement2(element, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : null;\n  return /* @__PURE__ */ React.createElement(Button, {\n    padding: \"0\",\n    borderRadius: isRound ? \"full\" : void 0,\n    ref,\n    \"aria-label\": ariaLabel,\n    ...rest\n  }, _children);\n});\nIconButton.displayName = \"IconButton\";\nexport {\n  Button,\n  ButtonGroup,\n  ButtonSpinner,\n  IconButton,\n  useButtonGroup\n};\n"],"names":["cx","classNames","filter","Boolean","join","dataAttr","condition","ButtonGroupProvider","useButtonGroup","createContext","strict","name","ButtonIcon","props","children","className","rest","_children","isValidElement","reactExports","cloneElement","focusable","_className","React","createElement","chakra","span","display","alignSelf","flexShrink","ButtonSpinner","label","placement","spacing","Spinner","color","width","height","__css","marginProp","spinnerStyles","useMemo","alignItems","position","fontSize","lineHeight","chakra2","div","displayName","Button","forwardRef","ref","group","styles","useStyleConfig","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","iconSpacing","type","spinner","spinnerPlacement","as","omitThemingProps","buttonStyles","useMemo2","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","_ref","defaultType","value","isButton","setIsButton","useState","useCallback","node","tagName","useButtonType","contentProps","chakra3","button","disabled","useMergeRefs","opacity","default","ButtonContent","Fragment","marginEnd","marginStart","attachedStyles","horizontal","borderEndRadius","borderRadius","borderStartRadius","vertical","borderBottomRadius","borderTopRadius","gapStyles","marginTop","ButtonGroup","forwardRef2","size","colorScheme","variant","isAttached","orientation","context","useMemo3","groupStyles","isVertical","chakra4","role","flexDir","IconButton","forwardRef3","icon","isRound","ariaLabel","element","isValidElement2","cloneElement2","padding"],"mappings":"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"}