{"version":3,"file":"index.esm.js","sources":["../../../../../../node_modules/@chakra-ui/checkbox/dist/index.esm.js"],"sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/checkbox-group.tsx\nimport { useMemo } from \"react\";\n\n// src/checkbox-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\n\n// src/use-checkbox-group.ts\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !Array.isArray(value);\n}\nvar dataAttr = (condition) => condition ? \"\" : void 0;\nfunction callAllHandlers(...fns) {\n  return function func(event) {\n    fns.some((fn) => {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\nfunction callAll(...fns) {\n  return function mergedFn(arg) {\n    fns.forEach((fn) => {\n      fn == null ? void 0 : fn(arg);\n    });\n  };\n}\n\n// src/use-checkbox-group.ts\nimport { useCallback } from \"react\";\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useCheckboxGroup(props = {}) {\n  const {\n    defaultValue,\n    value: valueProp,\n    onChange,\n    isDisabled,\n    isNative\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const [value, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  });\n  const handleChange = useCallback((eventOrValue) => {\n    if (!value)\n      return;\n    const isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    const selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    const nextValue = isChecked ? [...value, selectedValue] : value.filter((v) => String(v) !== String(selectedValue));\n    setValue(nextValue);\n  }, [setValue, value]);\n  const getCheckboxProps = useCallback((props2 = {}) => {\n    const checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return {\n      ...props2,\n      [checkedKey]: value.some((val) => String(props2.value) === String(val)),\n      onChange: handleChange\n    };\n  }, [handleChange, isNative, value]);\n  return {\n    value,\n    isDisabled,\n    onChange: handleChange,\n    setValue,\n    getCheckboxProps\n  };\n}\n\n// src/checkbox-group.tsx\nfunction CheckboxGroup(props) {\n  const { colorScheme, size, variant, children, isDisabled } = props;\n  const { value, onChange } = useCheckboxGroup(props);\n  const group = useMemo(() => ({\n    size,\n    onChange,\n    colorScheme,\n    value,\n    variant,\n    isDisabled\n  }), [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /* @__PURE__ */ React.createElement(CheckboxGroupProvider, {\n    value: group,\n    children\n  });\n}\nCheckboxGroup.displayName = \"CheckboxGroup\";\n\n// src/checkbox-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nfunction CheckIcon(props) {\n  return /* @__PURE__ */ React.createElement(chakra.svg, {\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    },\n    ...props\n  }, /* @__PURE__ */ React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n}\nfunction IndeterminateIcon(props) {\n  return /* @__PURE__ */ React.createElement(chakra.svg, {\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    style: { stroke: \"currentColor\", strokeWidth: 4 },\n    ...props\n  }, /* @__PURE__ */ React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n}\nfunction CheckboxIcon(props) {\n  const { isIndeterminate, isChecked, ...rest } = props;\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return isChecked || isIndeterminate ? /* @__PURE__ */ React.createElement(chakra.div, {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, /* @__PURE__ */ React.createElement(BaseIcon, {\n    ...rest\n  })) : null;\n}\n\n// src/checkbox.tsx\nimport {\n  chakra as chakra2,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cloneElement, useMemo as useMemo2 } from \"react\";\n\n// src/use-checkbox.ts\nimport { useFormControlProps } from \"@chakra-ui/form-control\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useCallbackRef as useCallbackRef2 } from \"@chakra-ui/react-use-callback-ref\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-checkbox.ts\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\";\nimport { trackFocusVisible } from \"@zag-js/focus-visible\";\nimport { useCallback as useCallback2, useEffect, useRef, useState } from \"react\";\nfunction useCheckbox(props = {}) {\n  const formControlProps = useFormControlProps(props);\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy\n  } = formControlProps;\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = void 0,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props;\n  const htmlProps = omit(rest, [\n    \"isDisabled\",\n    \"isReadOnly\",\n    \"isRequired\",\n    \"isInvalid\",\n    \"id\",\n    \"onBlur\",\n    \"onFocus\",\n    \"aria-describedby\"\n  ]);\n  const onChangeProp = useCallbackRef2(onChange);\n  const onBlurProp = useCallbackRef2(onBlur);\n  const onFocusProp = useCallbackRef2(onFocus);\n  const [isFocusVisible, setIsFocusVisible] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [isHovered, setHovered] = useState(false);\n  const [isActive, setActive] = useState(false);\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  const inputRef = useRef(null);\n  const [rootIsLabelElement, setRootIsLabelElement] = useState(true);\n  const [checkedState, setCheckedState] = useState(!!defaultChecked);\n  const isControlled = checkedProp !== void 0;\n  const isChecked = isControlled ? checkedProp : checkedState;\n  const handleChange = useCallback2((event) => {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [\n    isReadOnly,\n    isDisabled,\n    isChecked,\n    isControlled,\n    isIndeterminate,\n    onChangeProp\n  ]);\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(() => {\n    if (isDisabled) {\n      setFocused(false);\n    }\n  }, [isDisabled, setFocused]);\n  useSafeLayoutEffect(() => {\n    const el = inputRef.current;\n    if (!(el == null ? void 0 : el.form))\n      return;\n    el.form.onreset = () => {\n      setCheckedState(!!defaultChecked);\n    };\n  }, []);\n  const trulyDisabled = isDisabled && !isFocusable;\n  const onKeyDown = useCallback2((event) => {\n    if (event.key === \" \") {\n      setActive(true);\n    }\n  }, [setActive]);\n  const onKeyUp = useCallback2((event) => {\n    if (event.key === \" \") {\n      setActive(false);\n    }\n  }, [setActive]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current)\n      return;\n    const notInSync = inputRef.current.checked !== isChecked;\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  const getCheckboxProps = useCallback2((props2 = {}, forwardedRef = null) => {\n    const onPressDown = (event) => {\n      if (isFocused) {\n        event.preventDefault();\n      }\n      setActive(true);\n    };\n    return {\n      ...props2,\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props2.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props2.onMouseUp, () => setActive(false)),\n      onMouseEnter: callAllHandlers(props2.onMouseEnter, () => setHovered(true)),\n      onMouseLeave: callAllHandlers(props2.onMouseLeave, () => setHovered(false))\n    };\n  }, [\n    isActive,\n    isChecked,\n    isDisabled,\n    isFocused,\n    isFocusVisible,\n    isHovered,\n    isIndeterminate,\n    isInvalid,\n    isReadOnly\n  ]);\n  const getRootProps = useCallback2((props2 = {}, forwardedRef = null) => ({\n    ...htmlProps,\n    ...props2,\n    ref: mergeRefs(forwardedRef, (node) => {\n      if (!node)\n        return;\n      setRootIsLabelElement(node.tagName === \"LABEL\");\n    }),\n    onClick: callAllHandlers(props2.onClick, () => {\n      var _a;\n      if (!rootIsLabelElement) {\n        (_a = inputRef.current) == null ? void 0 : _a.click();\n        requestAnimationFrame(() => {\n          var _a2;\n          (_a2 = inputRef.current) == null ? void 0 : _a2.focus();\n        });\n      }\n    }),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  }), [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  const getInputProps = useCallback2((props2 = {}, forwardedRef = null) => {\n    return {\n      ...props2,\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name,\n      value,\n      id,\n      tabIndex,\n      onChange: callAllHandlers(props2.onChange, handleChange),\n      onBlur: callAllHandlers(props2.onBlur, onBlurProp, () => setFocused(false)),\n      onFocus: callAllHandlers(props2.onFocus, onFocusProp, () => setFocused(true)),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    };\n  }, [\n    name,\n    value,\n    id,\n    handleChange,\n    onBlurProp,\n    onFocusProp,\n    onKeyDown,\n    onKeyUp,\n    isRequired,\n    isChecked,\n    trulyDisabled,\n    isReadOnly,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaInvalid,\n    isInvalid,\n    ariaDescribedBy,\n    isDisabled,\n    tabIndex\n  ]);\n  const getLabelProps = useCallback2((props2 = {}, forwardedRef = null) => ({\n    ...props2,\n    ref: forwardedRef,\n    onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),\n    onTouchStart: callAllHandlers(props2.onTouchStart, stopEvent),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  }), [isChecked, isDisabled, isInvalid]);\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps\n  };\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\n// src/checkbox.tsx\nvar controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nvar rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nvar checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nvar indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nvar Checkbox = forwardRef(function Checkbox2(props, ref) {\n  const group = useCheckboxGroupContext();\n  const mergedProps = { ...group, ...props };\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  const ownProps = omitThemingProps(props);\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = /* @__PURE__ */ React.createElement(CheckboxIcon, null),\n    isChecked: isCheckedProp,\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps;\n  let isChecked = isCheckedProp;\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n  let onChange = onChangeProp;\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange\n  });\n  const iconStyles = useMemo2(() => ({\n    animation: state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n    fontSize: iconSize,\n    color: iconColor,\n    ...styles.icon\n  }), [iconColor, iconSize, , state.isIndeterminate, styles.icon]);\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /* @__PURE__ */ React.createElement(chakra2.label, {\n    __css: { ...rootStyles, ...styles.container },\n    className: cx(\"chakra-checkbox\", className),\n    ...getRootProps()\n  }, /* @__PURE__ */ React.createElement(\"input\", {\n    className: \"chakra-checkbox__input\",\n    ...getInputProps(inputProps, ref)\n  }), /* @__PURE__ */ React.createElement(chakra2.span, {\n    __css: { ...controlStyles, ...styles.control },\n    className: \"chakra-checkbox__control\",\n    ...getCheckboxProps()\n  }, clonedIcon), children && /* @__PURE__ */ React.createElement(chakra2.span, {\n    className: \"chakra-checkbox__label\",\n    ...getLabelProps(),\n    __css: {\n      marginStart: spacing,\n      ...styles.label\n    }\n  }, children));\n});\nCheckbox.displayName = \"Checkbox\";\nexport {\n  Checkbox,\n  CheckboxGroup,\n  CheckboxIcon,\n  useCheckbox,\n  useCheckboxGroup\n};\n"],"names":["CheckboxGroupProvider","useCheckboxGroupContext","createContext","name","strict","cx","classNames","filter","Boolean","join","dataAttr","condition","callAllHandlers","fns","event","some","fn","defaultPrevented","CheckIcon","props","React","createElement","chakra","svg","width","viewBox","style","fill","strokeWidth","stroke","strokeDasharray","default","points","IndeterminateIcon","x1","x2","y1","y2","CheckboxIcon","isIndeterminate","isChecked","rest","BaseIcon","div","display","alignItems","justifyContent","height","useCheckbox","formControlProps","useFormControlProps","isDisabled","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","defaultChecked","checkedProp","isFocusable","onChange","value","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","object","keysToOmit","clone","Object","assign","key","omit","onChangeProp","useCallbackRef2","onBlurProp","onFocusProp","isFocusVisible","setIsFocusVisible","useState","reactExports","isFocused","setFocused","isHovered","setHovered","isActive","setActive","useEffect","trackFocusVisible","inputRef","useRef","rootIsLabelElement","setRootIsLabelElement","checkedState","setCheckedState","isControlled","handleChange","useCallback2","preventDefault","target","checked","useSafeLayoutEffect","current","indeterminate","useUpdateEffect","el","form","onreset","trulyDisabled","onKeyDown","onKeyUp","getCheckboxProps","props2","forwardedRef","ref","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","getRootProps","mergeRefs","node","tagName","onClick","_a","click","requestAnimationFrame","_a2","focus","getInputProps","type","required","disabled","readOnly","visuallyHiddenStyle","getLabelProps","stopEvent","onTouchStart","state","stopPropagation","controlStyles","verticalAlign","userSelect","flexShrink","rootStyles","cursor","position","checkAnim","keyframes","from","opacity","strokeDashoffset","transform","to","indeterminateOpacityAnim","indeterminateScaleAnim","Checkbox","forwardRef","group","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","spacing","className","children","iconColor","iconSize","icon","isCheckedProp","inputProps","includes","arg","forEach","callAll","iconStyles","useMemo2","animation","fontSize","color","clonedIcon","cloneElement","__css","chakra2","label","container","span","control","marginStart","displayName"],"mappings":"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"}